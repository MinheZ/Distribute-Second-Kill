<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

    <context:component-scan base-package="com.minhe.seckill.service.impl"/>

<!--    事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    配置基于注解的声明式事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--发布 dubbo 服务-->
    <dubbo:application name="seckillManager"/>
    <!--注册中心地址-->
    <dubbo:registry protocol="zookeeper" address="192.168.1.127:2181"/>
    <!--用dubbo协议在20880端口暴露服务-->
    <dubbo:protocol name="dubbo" port="20880"/>
    <!--声明需要暴露的服务接口,timeout设置dubbo默认调用时间是1s，如果1s之后服务端没有响应，则判定为超时，会自动连接3次-->
<!--    <dubbo:annotation package="com.minhe.seckill.service.impl.StockServiceImpl"/>-->
    <dubbo:service interface="com.minhe.seckill.service.OrderService" ref="orderServiceImpl" timeout="30000"/>
    <dubbo:service interface="com.minhe.seckill.service.StockService" ref="stockServiceImpl" timeout="30000"/>

</beans>